### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy.send
  class: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy
  example:
  - "Configuring an async redirect policy.<!--[!code-python[Main](ples\\test_example_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_code\\\
    \\0\\\\azure-core-1.0.0b3\\\\examples\\\\test_example_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.pipeline.policies\
    \ import AsyncRedirectPolicy\n\n   config = Configuration()\n   config.redirect_policy\
    \ = AsyncRedirectPolicy()\n\n   # Client allows redirects. Defaults to True.\n\
    \   config.redirect_policy.allow = True\n\n   # The maximum allowed redirects.\
    \ The default value is 30\n   config.redirect_policy.max_redirects = 10\n\n  \
    \ # Alternatively you can disable redirects entirely\n   config.redirect_policy\
    \ = AsyncRedirectPolicy.no_redirects()\n\n   # It can also be overridden per operation.\n\
    \   async with AsyncPipelineClient(base_url=url, config=config) as client:\n \
    \      response = await client._pipeline.run(request, permit_redirects=True, redirect_max=5)\n\
    \n\n   ````\n"
  fullName: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: abc.ABC
      - inheritance:
        - type: builtins.object
        type: typing.Generic
      type: azure.core.pipeline.policies.base.HTTPPolicy
    type: azure.core.pipeline.policies.redirect.RedirectPolicy
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    - inheritance:
      - type: builtins.object
      type: typing.Generic
    type: azure.core.pipeline.policies.base_async.AsyncHTTPPolicy
  langs:
  - python
  module: azure.core.pipeline.policies.redirect_async
  name: AsyncRedirectPolicy
  summary: 'An async redirect policy.


    An async redirect policy in the pipeline can be configured directly or per operation.


    **Keyword arguments:**


    *permit_redirects (bool)* - Whether the client allows redirects. Defaults to True.


    *redirect_max (int)* - The maximum allowed redirects. Defaults to 30.'
  syntax:
    content: AsyncRedirectPolicy(**kwargs)
  type: class
  uid: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy
- class: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy
  fullName: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy.send
  langs:
  - python
  module: azure.core.pipeline.policies.redirect_async
  name: send(request)
  summary: 'Sends the PipelineRequest object to the next policy.

    Uses redirect settings to send the request to redirect endpoint if necessary.'
  syntax:
    content: send(request)
    parameters:
    - description: The PipelineRequest object
      id: request
      type:
      - azure.core.pipeline.PipelineRequest
    return:
      description: Returns the PipelineResponse or raises error if maximum redirects
        exceeded.
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy.send
references:
- fullName: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy.send
  isExternal: false
  name: send(request)
  parent: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy
  uid: azure.core.pipeline.policies.redirect_async.AsyncRedirectPolicy.send
