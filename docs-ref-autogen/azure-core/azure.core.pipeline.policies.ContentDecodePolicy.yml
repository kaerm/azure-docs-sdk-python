### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_http_generics
  - azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_text
  - azure.core.pipeline.policies.ContentDecodePolicy.on_response
  - azure.core.pipeline.policies.ContentDecodePolicy.CONTEXT_NAME
  - azure.core.pipeline.policies.ContentDecodePolicy.JSON_REGEXP
  class: azure.core.pipeline.policies.ContentDecodePolicy
  fullName: azure.core.pipeline.policies.ContentDecodePolicy
  inheritance:
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: typing.Generic
    type: azure.core.pipeline.policies.base.SansIOHTTPPolicy
  langs:
  - python
  module: azure.core.pipeline.policies
  name: ContentDecodePolicy
  summary: Policy for decoding unstreamed response content.
  syntax: {}
  type: class
  uid: azure.core.pipeline.policies.ContentDecodePolicy
- class: azure.core.pipeline.policies.ContentDecodePolicy
  fullName: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_http_generics
  langs:
  - python
  module: azure.core.pipeline.policies
  name: deserialize_from_http_generics(response)
  summary: 'Deserialize from HTTP response.

    Use bytes and headers to NOT use any requests/aiohttp or whatever

    specific implementation.

    Headers will tested for "content-type"'
  syntax:
    content: deserialize_from_http_generics(response)
    parameters:
    - description: The HTTP response.
      id: response
      type:
      - azure.core.pipeline.transport.HttpResponse
    - id: response
  type: method
  uid: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_http_generics
- class: azure.core.pipeline.policies.ContentDecodePolicy
  fullName: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_text
  langs:
  - python
  module: azure.core.pipeline.policies
  name: deserialize_from_text(response, content_type=None)
  summary: 'Decode response data according to content-type.

    Accept a stream of data as well, but will be load at once in memory for now.

    If no content-type, will return the string version (not bytes, not stream)'
  syntax:
    content: deserialize_from_text(response, content_type=None)
    parameters:
    - description: The HTTP response.
      id: response
      type:
      - azure.core.pipeline.transport.HttpResponse
    - description: The content type.
      id: content_type
      type:
      - str
    - defaultValue: None
      id: content_type
  type: method
  uid: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_text
- class: azure.core.pipeline.policies.ContentDecodePolicy
  exceptions:
  - description: If JSON is requested and parsing is impossible.
    type: JSONDecodeError
  - description: If bytes is not UTF8
    type: UnicodeDecodeError
  - description: If bytes is not valid XML
    type: xml.etree.ElementTree.ParseError
  fullName: azure.core.pipeline.policies.ContentDecodePolicy.on_response
  langs:
  - python
  module: azure.core.pipeline.policies
  name: on_response(request, response)
  summary: 'Extract data from the body of a REST response object.

    This will load the entire payload in memory.

    Will follow Content-Type to parse.

    We assume everything is UTF8 (BOM acceptable).'
  syntax:
    content: on_response(request, response)
    parameters:
    - description: The PipelineRequest object.
      id: request
      type:
      - azure.core.pipeline.PipelineRequest
    - description: The PipelineResponse object.
      id: response
      type:
      - azure.core.pipeline.PipelineResponse
    - description: Data to be processed.
      id: raw_data
    - description: How to parse if raw_data is a string/bytes.
      id: content_type
  type: method
  uid: azure.core.pipeline.policies.ContentDecodePolicy.on_response
- class: azure.core.pipeline.policies.ContentDecodePolicy
  fullName: azure.core.pipeline.policies.ContentDecodePolicy.CONTEXT_NAME
  langs:
  - python
  module: azure.core.pipeline.policies
  name: CONTEXT_NAME
  syntax:
    content: CONTEXT_NAME = 'deserialized_data'
  type: attribute
  uid: azure.core.pipeline.policies.ContentDecodePolicy.CONTEXT_NAME
- class: azure.core.pipeline.policies.ContentDecodePolicy
  fullName: azure.core.pipeline.policies.ContentDecodePolicy.JSON_REGEXP
  langs:
  - python
  module: azure.core.pipeline.policies
  name: JSON_REGEXP
  syntax:
    content: JSON_REGEXP = re.compile('^(application|text)/([0-9a-z+.]+\\+)?json$')
  type: attribute
  uid: azure.core.pipeline.policies.ContentDecodePolicy.JSON_REGEXP
references:
- fullName: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_http_generics
  isExternal: false
  name: deserialize_from_http_generics(response)
  parent: azure.core.pipeline.policies.ContentDecodePolicy
  uid: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_http_generics
- fullName: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_text
  isExternal: false
  name: deserialize_from_text(response, content_type=None)
  parent: azure.core.pipeline.policies.ContentDecodePolicy
  uid: azure.core.pipeline.policies.ContentDecodePolicy.deserialize_from_text
- fullName: azure.core.pipeline.policies.ContentDecodePolicy.on_response
  isExternal: false
  name: on_response(request, response)
  parent: azure.core.pipeline.policies.ContentDecodePolicy
  uid: azure.core.pipeline.policies.ContentDecodePolicy.on_response
- fullName: azure.core.pipeline.policies.ContentDecodePolicy.CONTEXT_NAME
  isExternal: false
  name: CONTEXT_NAME
  parent: azure.core.pipeline.policies.ContentDecodePolicy
  uid: azure.core.pipeline.policies.ContentDecodePolicy.CONTEXT_NAME
- fullName: azure.core.pipeline.policies.ContentDecodePolicy.JSON_REGEXP
  isExternal: false
  name: JSON_REGEXP
  parent: azure.core.pipeline.policies.ContentDecodePolicy
  uid: azure.core.pipeline.policies.ContentDecodePolicy.JSON_REGEXP
