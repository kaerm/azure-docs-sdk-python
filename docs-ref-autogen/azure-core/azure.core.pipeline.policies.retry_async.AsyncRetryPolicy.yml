### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.send
  - azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.sleep
  class: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
  example:
  - "Configuring an async retry policy.<!--[!code-python[Main](ples\\test_example_async.py\
    \ )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"source\": \"D:\\\\a\\\\1\\\\s\\\\source_code\\\
    \\0\\\\azure-core-1.0.0b3\\\\examples\\\\test_example_async.py\", \"xml:space\"\
    : \"preserve\", \"language\": \"python\", \"linenos\": false, \"highlight_args\"\
    : {\"linenostart\": 1}} -->\n\n````python\n\n   from azure.core.pipeline.policies\
    \ import AsyncRetryPolicy\n\n   config.retry_policy = AsyncRetryPolicy()\n\n \
    \  # Total number of retries to allow. Takes precedence over other counts.\n \
    \  # Default value is 10.\n   config.retry_policy.total_retries = 5\n\n   # How\
    \ many connection-related errors to retry on.\n   # These are errors raised before\
    \ the request is sent to the remote server,\n   # which we assume has not triggered\
    \ the server to process the request. Default value is 3\n   config.retry_policy.connect_retries\
    \ = 2\n\n   # How many times to retry on read errors.\n   # These errors are raised\
    \ after the request was sent to the server, so the\n   # request may have side-effects.\
    \ Default value is 3.\n   config.retry_policy.read_retries = 4\n\n   # How many\
    \ times to retry on bad status codes. Default value is 3.\n   config.retry_policy.status_retries\
    \ = 3\n\n   # A backoff factor to apply between attempts after the second try\n\
    \   # (most errors are resolved immediately by a second try without a delay).\n\
    \   # Retry policy will sleep for:\n   #    {backoff factor} * (2 ** ({number\
    \ of total retries} - 1))\n   # seconds. If the backoff_factor is 0.1, then the\
    \ retry will sleep\n   # for [0.0s, 0.2s, 0.4s, ...] between retries.\n   # The\
    \ default value is 0.8.\n   config.retry_policy.backoff_factor = 0.5\n\n   # The\
    \ maximum back off time. Default value is 120 seconds (2 minutes).\n   config.retry_policy.backoff_max\
    \ = 120\n\n   # Alternatively you can disable redirects entirely\n   config.retry_policy\
    \ = AsyncRetryPolicy.no_retries()\n\n   # All of these settings can also be configured\
    \ per operation.\n   async with AsyncPipelineClient(base_url=url, config=config)\
    \ as client:\n       response = await client._pipeline.run(\n           request,\n\
    \           retry_total=10,\n           retry_connect=1,\n           retry_read=1,\n\
    \           retry_status=5,\n           retry_backoff_factor=0.5,\n          \
    \ retry_backoff_max=60,\n           retry_on_methods=['GET']\n       )\n\n   ````\n"
  fullName: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
  inheritance:
  - inheritance:
    - inheritance:
      - inheritance:
        - type: builtins.object
        type: abc.ABC
      - inheritance:
        - type: builtins.object
        type: typing.Generic
      type: azure.core.pipeline.policies.base.HTTPPolicy
    type: azure.core.pipeline.policies.retry.RetryPolicy
  - inheritance:
    - inheritance:
      - type: builtins.object
      type: abc.ABC
    - inheritance:
      - type: builtins.object
      type: typing.Generic
    type: azure.core.pipeline.policies.base_async.AsyncHTTPPolicy
  langs:
  - python
  module: azure.core.pipeline.policies.retry_async
  name: AsyncRetryPolicy
  summary: 'Async flavor of the retry policy.


    The async retry policy in the pipeline can be configured directly, or tweaked
    on a per-call basis.


    **Keyword arguments:**


    *retry_total (int)* - Total number of retries to allow. Takes precedence over
    other counts.

    Default value is 10.


    *retry_connect (int)* - How many connection-related errors to retry on.

    These are errors raised before the request is sent to the remote server,

    which we assume has not triggered the server to process the request. Default value
    is 3.


    *retry_read (int)* - How many times to retry on read errors.

    These errors are raised after the request was sent to the server, so the

    request may have side-effects. Default value is 3.


    *retry_status (int)* - How many times to retry on bad status codes. Default value
    is 3.


    *retry_backoff_factor (float)* - A backoff factor to apply between attempts after
    the second try

    (most errors are resolved immediately by a second try without a delay).

    Retry policy will sleep for: *{backoff factor} * (2 ** ({number of total retries}
    - 1))*

    seconds. If the backoff_factor is 0.1, then the retry will sleep

    for [0.0s, 0.2s, 0.4s, ...] between retries. The default value is 0.8.


    *retry_backoff_max (int)* - The maximum back off time. Default value is 120 seconds
    (2 minutes).'
  syntax:
    content: AsyncRetryPolicy(**kwargs)
  type: class
  uid: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
- class: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
  fullName: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.send
  langs:
  - python
  module: azure.core.pipeline.policies.retry_async
  name: send(request)
  summary: Uses the configured retry policy to send the request to the next policy
    in the pipeline.
  syntax:
    content: send(request)
    parameters:
    - description: The PipelineRequest object
      id: request
      type:
      - azure.core.pipeline.PipelineRequest
    return:
      description: Returns the PipelineResponse or raises error if maximum retries
        exceeded.
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.send
- class: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
  fullName: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.sleep
  langs:
  - python
  module: azure.core.pipeline.policies.retry_async
  name: sleep(settings, transport, response=None)
  summary: 'Sleep between retry attempts.


    This method will respect a server''s `Retry-After` response header

    and sleep the duration of the time requested. If that is not present, it

    will use an exponential backoff. By default, the backoff factor is 0 and

    this method will return immediately.'
  syntax:
    content: sleep(settings, transport, response=None)
    parameters:
    - description: The retry settings.
      id: settings
      type:
      - dict
    - description: The HTTP transport type.
      id: transport
    - defaultValue: None
      description: The PipelineResponse object.
      id: response
      type:
      - azure.core.pipeline.PipelineResponse
  type: method
  uid: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.sleep
references:
- fullName: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.send
  isExternal: false
  name: send(request)
  parent: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
  uid: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.send
- fullName: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.sleep
  isExternal: false
  name: sleep(settings, transport, response=None)
  parent: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy
  uid: azure.core.pipeline.policies.retry_async.AsyncRetryPolicy.sleep
