### YamlMime:UniversalReference
api_name: []
items:
- children:
  - azure.core.polling.poller.LROPoller.add_done_callback
  - azure.core.polling.poller.LROPoller.done
  - azure.core.polling.poller.LROPoller.remove_done_callback
  - azure.core.polling.poller.LROPoller.result
  - azure.core.polling.poller.LROPoller.status
  - azure.core.polling.poller.LROPoller.wait
  class: azure.core.polling.poller.LROPoller
  fullName: azure.core.polling.poller.LROPoller
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.core.polling.poller
  name: LROPoller
  summary: Poller for long running operations.
  syntax:
    content: LROPoller(client, initial_response, deserialization_callback, polling_method)
    parameters:
    - description: A pipeline service client
      id: client
      type:
      - azure.core.pipeline.PipelineClient
    - description: The initial call response
      id: initial_response
      type:
      - azure.core.pipeline.HttpResponse
    - description: 'A callback that takes a Response and return a deserialized object.

        If a subclass of Model is given, this passes "deserialize" as callback.'
      id: deserialization_callback
      type:
      - callable
      - msrest.serialization.Model
    - description: The polling strategy to adopt
      id: polling_method
      type:
      - msrest.polling.PollingMethod
  type: class
  uid: azure.core.polling.poller.LROPoller
- class: azure.core.polling.poller.LROPoller
  fullName: azure.core.polling.poller.LROPoller.add_done_callback
  langs:
  - python
  module: azure.core.polling.poller
  name: add_done_callback(func)
  summary: 'Add callback function to be run once the long running operation

    has completed - regardless of the status of the operation.'
  syntax:
    content: add_done_callback(func)
    parameters:
    - description: 'Callback function that takes at least one

        argument, a completed LongRunningOperation.'
      id: func
      type:
      - callable
  type: method
  uid: azure.core.polling.poller.LROPoller.add_done_callback
- class: azure.core.polling.poller.LROPoller
  fullName: azure.core.polling.poller.LROPoller.done
  langs:
  - python
  module: azure.core.polling.poller
  name: done()
  summary: Check status of the long running operation.
  syntax:
    content: done()
    parameters: []
    return:
      description: '''True'' if the process has completed, else ''False''.'
  type: method
  uid: azure.core.polling.poller.LROPoller.done
- class: azure.core.polling.poller.LROPoller
  fullName: azure.core.polling.poller.LROPoller.remove_done_callback
  langs:
  - python
  module: azure.core.polling.poller
  name: remove_done_callback(func)
  summary: Remove a callback from the long running operation.
  syntax:
    content: remove_done_callback(func)
    parameters:
    - description: The function to be removed from the callbacks.
      id: func
      type:
      - callable
  type: method
  uid: azure.core.polling.poller.LROPoller.remove_done_callback
- class: azure.core.polling.poller.LROPoller
  exceptions:
  - description: Server problem with the query.
    type: CloudError
  fullName: azure.core.polling.poller.LROPoller.result
  langs:
  - python
  module: azure.core.polling.poller
  name: result(timeout=None)
  summary: 'Return the result of the long running operation, or

    the result available after the specified timeout.'
  syntax:
    content: result(timeout=None)
    parameters:
    - defaultValue: None
      id: timeout
    return:
      description: 'The deserialized resource of the long running operation,

        if one is available.'
  type: method
  uid: azure.core.polling.poller.LROPoller.result
- class: azure.core.polling.poller.LROPoller
  fullName: azure.core.polling.poller.LROPoller.status
  langs:
  - python
  module: azure.core.polling.poller
  name: status()
  summary: Returns the current status string.
  syntax:
    content: status()
    parameters: []
    return:
      description: The current status string
      type:
      - str
  type: method
  uid: azure.core.polling.poller.LROPoller.status
- class: azure.core.polling.poller.LROPoller
  exceptions:
  - description: Server problem with the query.
    type: CloudError
  fullName: azure.core.polling.poller.LROPoller.wait
  langs:
  - python
  module: azure.core.polling.poller
  name: wait(timeout=None)
  summary: 'Wait on the long running operation for a specified length

    of time. You can check if this call as ended with timeout with the

    "done()" method.'
  syntax:
    content: wait(timeout=None)
    parameters:
    - description: 'Period of time to wait for the long running

        operation to complete (in seconds).'
      id: timeout
      type:
      - int
  type: method
  uid: azure.core.polling.poller.LROPoller.wait
references:
- fullName: azure.core.polling.poller.LROPoller.add_done_callback
  isExternal: false
  name: add_done_callback(func)
  parent: azure.core.polling.poller.LROPoller
  uid: azure.core.polling.poller.LROPoller.add_done_callback
- fullName: azure.core.polling.poller.LROPoller.done
  isExternal: false
  name: done()
  parent: azure.core.polling.poller.LROPoller
  uid: azure.core.polling.poller.LROPoller.done
- fullName: azure.core.polling.poller.LROPoller.remove_done_callback
  isExternal: false
  name: remove_done_callback(func)
  parent: azure.core.polling.poller.LROPoller
  uid: azure.core.polling.poller.LROPoller.remove_done_callback
- fullName: azure.core.polling.poller.LROPoller.result
  isExternal: false
  name: result(timeout=None)
  parent: azure.core.polling.poller.LROPoller
  uid: azure.core.polling.poller.LROPoller.result
- fullName: azure.core.polling.poller.LROPoller.status
  isExternal: false
  name: status()
  parent: azure.core.polling.poller.LROPoller
  uid: azure.core.polling.poller.LROPoller.status
- fullName: azure.core.polling.poller.LROPoller.wait
  isExternal: false
  name: wait(timeout=None)
  parent: azure.core.polling.poller.LROPoller
  uid: azure.core.polling.poller.LROPoller.wait
